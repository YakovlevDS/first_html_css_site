/* задаем для body background картинку  */
body {
  background-image: url("../img/patt.png");
}

/* задаем Свойства width и height будут включать в себя значения padding и border, но не margin. */
* {
  box-sizing: border-box;
}

/* контейнер для всего содержимого сайта с фиксированой шириной 1200 */
.container {
  width: 1200px;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;
}

/* возвращаем границу внутреннего блока row в исходное положение +- 15 px */
.row {
  margin-left: -15px;
  margin-right: -15px;
}

/* очистка float */
.row:after,
.menu:after,
.search:after,
.basket:after {
  content: "";
  display: block;
  clear: both;
}

/* задаем классам-колонкам соответсвующую ширину в %: Если  12 колонок - это 100% ширины, тогда X колонок занимает - 12/X*100% ширину*/
.col-md-3 {
  width: 25%;
}

.col-md-6 {
  width: 50%;
}

.col-md-9 {
  width: 75%;
}

/* для всех классов содержащих "col-" применяем float с внутренними отступами по 15рх */
[class*="col-"] {
  float: left;
  padding-left: 15px;
  padding-right: 15px;
}

/*  для шапки сайта применяем фон и внутренние отступы */
.header {
  padding: 25px 0;
  background-color: rgba(255, 255, 255, 0.75);
}

/* садим на 7px лого по макету вниз padding */
.logo {
  padding-top: 7px;
}

/* делаем меню  с 4мя заголовками (100%/4=25% ширины на каждый)на float с вертикальной чертой слева за счет видимой левой границы */
.menu li {
  float: left;
  width: 25%;
  border-left: 1px solid rgb(44, 113, 184);

}

/* для последнего пункта меню делаем правую границу- вертикальную черту по макету */
.menu li:last-child {
  border-right: 1px solid rgb(44, 113, 184);
}

/* для меню ссылок убираем подчеркивание выравниваем по высоте и длине -по центру, отображаем пункты как блоки задаем шрифт жирность размер цвет и высоту блока */
.menu a {
  display: block;
  height: 50px;
  text-decoration: none;
  font-size: 21px;
  font-weight: 300;
  text-align: center;
  line-height: 50px;
  color: rgb(44, 113, 184);
  font-family: 'Roboto',
    sans-serif;

}

/* позиционируем пункты меню относительно родителя */

.menu>li {

  position: relative;

}

/* при наведении на ссылку пункт меню меняем цвет и фон пункта */
.menu>li:hover>a {
  background-color: #2c71b8;
  color: #ffffff;
  background-image: url("../img/arr-w.png");
  background-repeat: no-repeat;
  background-position: 95%;
}

/* настраиваем выпадающее меню */
.in-menu {
  /* прячем изначально */
  visibility: hidden;
  opacity: 0;
  position: absolute;
  /* Устанавливаеv координаты точки, относительно которой будет происходить трансформация элемента. */
  transform-origin: 0% 0%;
  /* Поворот элемента на заданный угол относительно точки трансформации, задаваемой свойством transform-origin. */
  transform: rotateX(-90deg);
  /* задаем плавность выпадения списка. Устанавливаем эффект перехода между двумя состояниями элемента */
  transition: 0.3s linear;
}

/* задаем ссылкам в подменю цвет и фон */
.in-menu a {
  background-color: rgb(44, 113, 184);
  color: white;
}

/* меняем цвет и фон ссылкам при наведении на подменю */
.in-menu a:hover {
  color: rgb(44, 113, 184);
  background-color: white;
}

/* задаем относительное позиционирование подменю пунктам как блоки с заданной высотой и шириной  по макету*/
.in-menu li {
  position: relative;
  display: block;
  float: none;
  width: 285px;
  height: 40px;
  border: none;
}

/* задаем стрелку для подменю задаем размеры путь центрируем */
.arrow {
  width: 15px;
  height: 15px;
  position: absolute;
  background-image: url("../img/arr-b.png");
  background-position: center;
  background-repeat: no-repeat;
  /* Сдвигаем элемент относительно исходного расположения на заданное значение по горизонтали и вертикали. */
  transform: translate(800%, -210%);

}


/* задаем видимость -выпадение подменю */
nav li:hover>.in-menu {
  transform: rotateX(0deg);
  visibility: visible;
  opacity: 1;
}




/* задаем свойства и позиционируем строку поиска */
.search {
  width: 160px;
  height: 40px;
  border-top: 1px solid rgb(44, 113, 184);
  border-left: 1px solid rgb(44, 113, 184);
  border-bottom: 1px solid rgb(44, 113, 184);
  border-right: 1px solid rgba(0, 0, 0, 0);
  padding-left: 20px;
  float: left;
  background-color: rgba(0, 0, 0, 0);
  margin-top: 5px;
}

/* задаем свойства для строки поиска при начале ввода */
.search::placeholder {
  color: rgb(44, 113, 184);
  font-family: 'Roboto',
    sans-serif;
  font-size: 21px;
  font-weight: 300;
}

/* задаем иконкена кнопке поиска свойства */
.ic-serch {
  width: 30px;
  height: 30px;
  background-color: rgb(44, 113, 184);
  border: none;
  cursor: pointer;
  position: absolute;

  transform: translate(11%, 13.5%);
  background-image: url("../img/icon\ \(4\).png");
  background-position: center;
  background-repeat: no-repeat;
}

/* задаем и позиционируем кнопку поиска рядом со строкой поиска */
.button {
  width: 40px;
  height: 40px;
  background-color: rgba(0, 0, 0, 0);
  border-top: 1px solid rgb(44, 113, 184);
  border-left: 1px solid rgba(0, 0, 0, 0);
  border-bottom: 1px solid rgb(44, 113, 184);
  border-right: 1px solid rgb(44, 113, 184);
  transform: translate(390%, 12.5%);
  position: absolute;
}


/* задаем корзину по макету */
.basket {
  width: 40px;
  height: 40px;
  background-color: rgb(255, 255, 255);
  float: right;
  background-image: url("../img/icon\ \(1\).png");
  background-position: center;
  background-repeat: no-repeat;
  margin-top: 5px;
  position: relative;

}

/* задаем цифру в кружке над корзиной позиционируем по макету */
.number {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: rgb(44, 113, 184);
  color: rgb(255, 255, 255);
  text-align: center;
  line-height: 20px;
  font-size: 12px;
  transform: translate(-50%, -50%);
  position: absolute;
}